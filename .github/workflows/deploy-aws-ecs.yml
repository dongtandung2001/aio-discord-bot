name: Build and Deploy Discord Bot to AWS ECS

on:
  push:
    branches: ["main"]

env:
  ECR_DISCORD_BOT_IMAGE: ${{ vars.ECR_DISCORD_BOT_IMAGE }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_DISCORD_BOT_SERVICE: ${{vars.ECS_DISCORD_BOT_SERVICE}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credential
        uses: aws-action/configure-aws-credential@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION
      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 211125773438.dkr.ecr.us-west-1.amazonaws.com

      - name: Build and push Docker image to ECR
        run: |
          docker buildx create --use
          docker buildx inpsect --bootstrap
          docker buildx build --platform linux/x86 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_DISCORD_BOT_IMAGE:latest --push .
      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster $ECS_CLUSTER --service $ECS_DISCORD_BOT_SERVICE --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: $AWS_REGION
